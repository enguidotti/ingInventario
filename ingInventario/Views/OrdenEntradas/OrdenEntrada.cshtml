
@{
    ViewBag.Title = "OrdenEntrada";
}

@*<div class="row wrapper border-bottom white-bg page-heading">
    <h2>Entrada de Stock</h2>
</div>*@


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox-title">
                <h3>Ingrese los datos de la categoría a crear</h3>
            </div>
            <div class="ibox-content">
                <div class="form-group row">
                    <label class="col-sm-1">N° Factura</label>
                    <div class="col-sm-2">
                        <input type="text" id="numFact" class="form-control" />
                    </div>
                    <label class="col-sm-1">Comentario</label>
                    <div class="col-sm-4">
                        <input type="text" id="comentario"  class="form-control" />
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-1">Código:</label>
                    <div class="col-sm-2" style="padding-right:0px">
                        <input type="text" class="form-control" id="codigo"/>
                    </div>
                    <div class="col-sm-3" style="padding-left:0px;padding-right:0px">
                        <input type="text" class="form-control" id="nombre" readonly/>
                    </div>
                    <label class="col-sm-1"> Cantidad:</label>
                    <div class="col-sm-1">
                        <input type="number" class="form-control" id="cantidad"/>
                    </div>
                    <input type="button" id="agregar" value="Agregar" class="btn btn-primary"/>
                </div>
                <div id="tablaProductos" hidden>
                    <hr />
                    <div class="table-responsive">
                        <table id="detalleProducto" class="table">
                            <thead>
                                <tr class="bg-primary">
                                    <th>Código</th>
                                    <th>Nombre</th>
                                    <th>Cantidad</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                    <input type="button" id="guardar" value="Guardar" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
</div>
<script src="~/Scripts/plugins/sweetalert/sweetalert.min.js"></script>
<script>
    let idProducto = 0;
    let datos = [];//arreglo para guardar los productos que se vayan agregando
    //ingresando código verifica si el producto existe, trae id_producto y nombre producto 
    $('#codigo').blur(function () {
        if ($('#codigo').val().trim() !== '') {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CodigoExiste")',
                data: '{codigo:' + JSON.stringify($('#codigo').val()) + '}',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (respuesta) {
                    if (respuesta !== '') {
                        $('#nombre').val(respuesta.nombre);
                        idProducto = respuesta.id_producto;
                    }
                }
            });
        }
    });
    $('#guardar').click(function () {
        let error = '';
        if ($('#numFact').val() == '')
            error = 'Debe ingresar número de factura \n';
        if (datos.length == 0)
            error += 'Debe agregar productos';
        if (error != '')
            swal('Error', error, 'warning');
        else {
            const ordenEntrada = {
                num_factura: $('#numFact').val(),
                comentario: $('#comentario').val()
            }
            $.ajax({
                type: 'POST',
                url: '@Url.Action("OrdenEntrada")',
                data: '{orden:' + JSON.stringify(ordenEntrada) + ',detalles:' + JSON.stringify(datos) + '}',
                dataType: 'json',
                contentType: 'application/json;charset=utf-8',
                success: function (resp) {
                    
                }

            });
        }                
    });
    //*****TABLA DE PRODUCTOS*****//
    //agregar productos al arreglo
    $('#agregar').click(function () {
        let error = '';
        if ($('#nombre').val().trim() == '')
            error = 'Debe ingresar un producto \n';
        if ($('#cantidad').val() <= 0)
            error += 'Debe ingresar cantidad del producto';
        if (error != '')
            swal('Error', error, 'warning');
        else {
            const modelo = {
                id_producto: idProducto,
                codigo: $('#codigo').val(),
                nombre: $('#nombre').val(),
                cantidad: $('#cantidad').val()
            };
            //Pregunta si el arreglo tiene datos
            let x = 0;
            if (datos.length > 0) {
                //si tiendas reccore el arreglo para verificar si el producto existe en el arreglo
                for (let i = 0; i < datos.length; i++) {
                    if (datos[i].id_producto == modelo.idProducto) {
                        datos[i].cantidad = modelo.cantidad;
                        x = 1;
                        break;//corta el ciclo
                    }
                }
                if (x == 0) {
                    datos.push(modelo);
                }
            }
            else {
                datos.push(modelo);//push sirve para añidir el modelo al arreglo ded datos
            }
            $('#tablaProductos').removeAttr('hidden', true);
            cargarTablaDetalle();//función que sirve para mostrar los datos del arreglo en una tabla
            limpiar();//función para limpiar los datos del producto ingresado
        }
        //función para cargar los productos del arreglo en una tabla 
        function cargarTablaDetalle() {
            $('#detalleProducto tbody').empty();//limpia el cuerpo de la tabla
            for (let i = 0; i < datos.length; i++) {//for para recorrer el arreglo y generar las filas de la tabla
                fila = '<tr>';
                fila += '<td>' + datos[i].codigo + '</td>';
                fila += '<td>' + datos[i].nombre + '</td>';
                fila += '<td>' + datos[i].cantidad + '</td>';
                fila += "<td><button class='btn btn-danger eliminar'><span class='fa fa-trash'></span></button>";
                fila += '</tr>';
                $('#detalleProducto tbody').append(fila);//mustra las filas en la tabla
                eliminar();//función que permite eliminar de la tabla y del arreglo datos
            }
        }
        //limpiar los datos del producto ingresado
        function limpiar() {
            idProducto = 0;
            $('#nombre').val('');
            $('#cantidad').val('');
            $('#codigo').val('');
        }
        //elimianr datos del arreglo y de la tabla
        function eliminar() {
            $('.eliminar').click(function () {

                //obtener el código de la fila donde se presiona el botón de trash 
                let cod = $(this).parents('tr').find('td').eq(0).html();
                for (let i = 0; i < datos.length; i++) {
                    if (datos[i].codigo == cod) {
                        datos.splice(i, 1);//splice sirve para sacar elementos del arreglo
                    }
                }
                //llamar a función cargar tabla para recargar el arreglo en la tabla 
                cargarTablaDetalle();
                //si la cantidad de elementos que hay en la tabla es == 0 la oculta
                if (datos.length == 0) {
                    $('#tablaProductos').attr('hidden',true);
                }
            });
        }
        //*****FIN TABLA DE PRODUCTOS*****//
    });
</script>